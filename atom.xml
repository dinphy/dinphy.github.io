<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dinphy - 简乐</title>
  
  <subtitle>生活不易,快乐就好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dinphy.github.io/"/>
  <updated>2018-05-17T13:16:31.998Z</updated>
  <id>https://dinphy.github.io/</id>
  
  <author>
    <name>Dinphy - 简乐</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>夏日畅想</title>
    <link href="https://dinphy.github.io/posts/a33ad06e/"/>
    <id>https://dinphy.github.io/posts/a33ad06e/</id>
    <published>2018-05-16T06:13:09.000Z</published>
    <updated>2018-05-17T13:16:31.998Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我喜欢夏天，尤其是在我工作的地方。我在学校上班，感觉累了就到池塘边歇息，看池中的金鱼嬉戏打闹；觉得热了就到大树下乘凉，安静的听着同学们的读书声；怀想着过去，畅想着未来，这是多么的惬意和随心所欲！</p></blockquote><blockquote><p>夏天的校园氛围，比其它季节浓。晴天，树荫下结伴同行的师生是一道风景；雨天，大家撑着伞，从高处往下看时，仿佛一个个移动的城堡；阴天，不冷不热，微风拂面的感觉，总是让人清醒。</p></blockquote><blockquote><p>早晨，是夏日里空气最清新的时候，声声入耳的读书声，历历在目的奋斗士，在这里我们看到了星星之火。中午，也许你会犹豫要不要在到外面走走，体验一下烈日当空照而汗流浃背的灼热感。傍晚，也许你不会犹豫了，翩翩起舞的蝴蝶在花草上你追我赶，时而分时而合。这样的一天中，除了上班时间，只要你敢挑战，美好的事情总在发生！</p></blockquote><blockquote><p>我喜欢夏天，这是个让人成长的季节。对于学生而言，他们即将迎来新的历程。有的人即将小学毕业，有的人将面对中考，有的人将挑战高考，有的人将踏入社会，有的人将走上工作岗位……这也是个痛并快乐着的季节，因为有人成功的同时，有人正面对着失败。在这样患得患失的夏天，你还和我一样一如既往的喜欢吗？</p></blockquote><blockquote><p>我喜欢夏天，喜欢绿树成荫的校园，喜欢校园里既有点顽劣又让人觉得可爱的学生。</p></blockquote><blockquote><p>我喜欢夏天，喜欢书香满溢的校园，喜欢校园里那种无忧无虑的只需要学习的生活。</p></blockquote><blockquote><p>我喜欢夏天，喜欢这个季节带给我的不一样。</p></blockquote><p><img src="https://raw.githubusercontent.com/dinphy/website_pic/master/photos/20180516135537.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我喜欢夏天，尤其是在我工作的地方。我在学校上班，感觉累了就到池塘边歇息，看池中的金鱼嬉戏打闹；觉得热了就到大树下乘凉，安静的听着同学们的读书声；怀想着过去，畅想着未来，这是多么的惬意和随心所欲！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockqu
      
    
    </summary>
    
      <category term="业余小作" scheme="https://dinphy.github.io/categories/%E4%B8%9A%E4%BD%99%E5%B0%8F%E4%BD%9C/"/>
    
      <category term="生活感悟" scheme="https://dinphy.github.io/categories/%E4%B8%9A%E4%BD%99%E5%B0%8F%E4%BD%9C/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/"/>
    
    
      <category term="生活" scheme="https://dinphy.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="业余小作" scheme="https://dinphy.github.io/tags/%E4%B8%9A%E4%BD%99%E5%B0%8F%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>《代码整洁之道》读书笔记</title>
    <link href="https://dinphy.github.io/posts/65e48179/"/>
    <id>https://dinphy.github.io/posts/65e48179/</id>
    <published>2018-04-19T10:11:12.000Z</published>
    <updated>2018-04-19T12:34:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>相对于任何宏伟愿景，对细节的关注甚至是更为关键的专业性基础。首先，开发者通过小型实践获得可用于大型实践的技能和信用度。其次，宏大建筑中最细小的部分，比如关不紧的门、有点儿没铺平的地板，甚至是凌乱的桌面，都会将整个大局的魅力毁灭殆尽。这就是整洁代码之所系。</p></blockquote><a id="more"></a>本书「序」中的这段话完美的诠释了作者写本书的意义。（简评在最后）<br><br>## 序<br><br>1. 神在细节之中。<br>2. 5S 哲学包括以下概念：<br>   - 整理（Seiri）<br>   - 整顿（Seiton）<br>   - 清楚（Seiso）<br>   - 清洁（Seiketsu）<br>   - 身美（Shitsuke）<br><br>## 整洁代码<br><br>1. 有人也许以为，关于代码的书有点落后于时代——代码不再是问题：我们应当关注模型和需求。……扯淡！我们永远抛不掉代码，因为代码呈现了需求的细节。在某些层面上，这些细节无法被忽略或抽象，必须明确之。将需求明确到机器可以执行的细节程度，就是编程要做的事。而这种规约正是<strong>代码</strong>。<br>2. 勒布朗（LeBlanc）法则：<strong>稍后等于永不</strong>（Later equals never）。<br>3. 多数人都知道一幅画是好还是坏。但能分辨优劣并不表示懂得绘画。能分辨整洁代码和肮脏代码，也不意味着会写整洁代码！<br>4. <strong>Bjarne Stroustrup（C++ 语言发明者）</strong>：我喜欢优雅和高效的代码。代码逻辑应当直截了当，叫缺陷难以隐藏；尽量减少依赖关系，使之便于维护；依据某种分层战略完善错误处理代码；性能调至最优，省得引诱别人做没规矩的优化，高处一堆混乱来，整洁的代码只做好一件事。<br>5. <strong>Grady Booch（《面向对象分析与设计》作者）</strong>：整洁的代码简单直接。整洁的代码如同优美的散文。整洁的代码从不隐藏设计者的意图，充满了干净利落的抽象和直截了当的控制语句。<br>6. <strong>Ron Jeffries（《极限编程实施》作者）</strong>：简单代码，依其重要顺序：<br>   - 能通过所有测试；<br>   - 没有重复代码；<br>   - 体现系统中的全部设计理念；<br>   - 包括尽量少的实体，比如类、方法、函数等。<br>7. <strong>Ward Cunningham（Wiki 发明者）</strong>：如果每个例程都让你感到深合己意，那就是整洁代码。如果代码让编程语言看起来像是专为解决那个问题而存在，就可以称之为漂亮的代码。<br>8. 光把代码写好可不够。必须时时保持代码整洁。<br><br>## 有意义的命名<br><br>1. <strong>名副其实</strong>：变量、函数或类的名称应该已经答复了所有的大问题。它该告诉你，它为什么会存在，它做什么事，应该怎么用。<br><br>2. <strong>避免误导</strong>：应当避免使用与本意相悖的词。别用 accountList 来指称一组账号，除非它真的是 List 类型。用 accountGroup 或 bunchOfAccounts，甚至 accounts 都会好一些。<br><br>3. <strong>做有意义的区分</strong>：以数字系列命名（a1、a2，……aN）是依义命名的对立面。这样的名称纯属误导——完全没有提供正确信息；没有提供导向作者意图的线索。<br><br>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copyChars</span><span class="params">(<span class="keyword">char</span> a1[], <span class="keyword">char</span> a2[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a1.length; i++) &#123;</span><br><span class="line">        a2[i] = a1[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   如果参数名改为 source 和 destination，这个函数就会像样许多。</p><ol start="4"><li><p><strong>使用读得出来的名称</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Date genymdhms; <span class="comment">// 生成日期，年、月、日、时、分、秒</span></span><br><span class="line"><span class="keyword">private</span> Date generationTimestamp;</span><br></pre></td></tr></table></figure></li><li><p><strong>使用可搜索的名称</strong>：窃以为单字母名称<strong>仅</strong>用于短方法中的本地变量。名称长短应于其作用域大小相对应。</p></li><li><p><strong>避免思维映射</strong>：不应当让读者在脑中把你的名称翻译为他们熟知的名称。</p></li><li><p><strong>类名</strong>：类名和对象名应该是名词或名词短语，如 Customer、WikiPage。避免使用 Manager、Data 这样的类名。</p></li><li><p><strong>方法名</strong>：方法名应当是动词或动词短语，如 postPayment、deletePage 或 save。</p></li><li><p><strong>每个概念对应一个词</strong>：给每个抽象概念选一个词，并且一以贯之。</p></li><li><p><strong>别用双关语</strong>：避免将同一单词用于不同目的。</p></li></ol><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ol><li>函数的第一规则是要短小。第二条规则是还要更短小。</li><li>函数应该做一件事。做好这件事。只做这一件事。</li><li>别害怕长名称。长而具有描述性的名称，要比短而令人费解的名称好。长而具有描述性的名称，要比描述性的长注释好。</li><li>最理想的参数数量是零（零参数函数），其次是一（单参数函数），再次是二（双参数函数），应尽量避免三（三参数函数）。如果函数看来需要两个、三个或三个以上参数，就说明其中一些参数应该封装为类了。</li><li>函数要么做什么事，要么回答什么事，但二者不可兼得。函数应该修改某对象的状态，或是返回该对象的有关信息。</li><li>重复可能是软件中一切邪恶的根源。许多原则与实践规则都是为控制与消除重复而创建。</li><li>我写函数时，一开始都冗长而复杂。有太多缩进和嵌套循环。然后我打磨这些代码，分解函数、修改名称、消除重复。我缩短和重新安置方法。有时我还拆散类。</li><li>大师级程序员把系统当作故事来讲，而不是当作程序来写。他们使用选定编程语言提供的工具构建一种更为丰富且更具表达力的语言，用来讲那个故事。</li></ol><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ol><li><strong>Brian W. Kernighan 与 P. J. Plaugher</strong>：别给糟糕的代码加注释——重新写吧。</li><li>注释的恰当用法是弥补我们在用代码表达意图时遭遇的失败。注意，我用了「失败」一词。我是说真的。注释总是一种失败。我为什么要极力遍地注释？因为注释会撒谎。</li><li><strong>好注释</strong>：<ol><li>法律信息</li><li>提供信息的注释</li><li>对意图的解释</li><li>阐释</li><li>警示</li><li>TODO</li></ol></li></ol><h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><ol><li>你今天编写的功能，极有可能在下一版本中被修改，但代码的可读性却会对以后可能发生的修改行为产生深远影响。</li><li><strong>垂直格式</strong>：<ol><li>关系密切的概念应该相互靠近。</li><li>变量声明应尽可能靠近其使用位置。</li><li>实体变量应该在类的顶部声明。</li><li>若某个函数调用了另外一个，就应该把它们放到一起，而且调用者应该尽肯能放在被调用者上面。</li></ol></li><li><strong>横向格式</strong>：<ol><li>应该尽量保持代码行短小。死守 80 个字符上限有点僵化，至多在 100 或 120 个字符。</li><li>赋值操作符周围加上空格字符，以此加上强调目的。</li><li>不在函数名和左圆括号之间加空格。</li><li>源文件是一种继承结构，而不是一种大纲结构。类中的方法相对该类缩进一个层级。方法的实现相对方法声明缩进一个层级。</li></ol></li></ol><h2 id="对象和数据结构"><a href="#对象和数据结构" class="headerlink" title="对象和数据结构"></a>对象和数据结构</h2><ol><li><p>过程式代码便于在不该动既有数据结构的前提下添加新函数。面向对象代码便于在不改动既有函数的前提下添加新类。</p></li><li><p>得墨忒耳率认为，类 C 的方法 f 只应该调用以下对象的方法：</p><ul><li>C</li><li>由 f 创建的对象；</li><li>作为参数传递给 f 的对象；</li><li>由 C 的实体变量持有的对象。</li></ul><p>方法不应调用由任何函数返回的对象的方法。换言之，只跟朋友谈话，不与陌生人谈话。</p></li><li><p>对象曝露行为，隐藏数据。便于添加新对象类型而无需修改既有行为，同时也难以在既有对象中添加新行为。数据结构曝露数据，没有明显的行为。便于向既有数据结构添加新行为，同时也难以向既有函数添加新数据结构。</p></li></ol><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><ol><li>错误处理很重要，<strong>但如果它搞乱了代码逻辑，就是错误的做法</strong>。</li><li>在某种意义上，try 代码块就像是事务。catch 代码块将程序维持在一种状态，无论 try 代码块中发生了什么均如此，所以，在编写可能抛出异常的代码时，最好先写出 try-catch-finally 语句。</li><li>你抛出的每个异常，都应当提供足够的环境说明，以便判断错误的来源和处所。</li><li>对异常可以依据其来源分类：是来自组件还是其他地方？或依其类型分类：是设备错误、网络错误还是编程错误？不过，当我们在应用程序中定义异常类时，最重要的考虑应该是<strong>它们如何被捕获</strong>。</li><li>返回 null 值，基本上是在给自己增加工作量，也是在给调用者添乱。只要有一处没检查 null 值，应用程序就会失控。在方法中返回 null 值是糟糕的做法，但将 null 值传递给其他方法就更糟糕了。</li></ol><h2 id="边界"><a href="#边界" class="headerlink" title="边界"></a>边界</h2><ol><li><strong>学习性测试</strong>（learning tests）：不要在生产代码中试验新东西，而是编写测试来遍览和理解第三方代码</li><li>使用尚不存在的代码，将尚未开发完毕的 API 从中隔离出来。自己通过使用符合应用程序的接口，一旦 API 被定义出来，再将二者对接。</li><li>通过代码中少数几处引用第三方边界接口的位置来管理第三方边界。</li></ol><h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><ol><li>TDD 三定律：<ol><li>在编写不能通过的单元测试前，不可编写生产代码。</li><li>只可编写刚好无法通过的单元测试，不能编译也不算通过。</li><li>只可编写刚好足以通过当前失败测试的生产代码。</li></ol></li><li>脏测试等同于——如果不是坏于的话——没测试。</li><li>测试代码和生产代码一样重要。它可不是二等公民。它需要被思考、被设计和被照料。它该像生产代码一般保持整洁。</li><li>整洁的测试有什么要素？有三个要素：可读性、可读性和可读性。</li><li>整洁的测试遵循以下 5 条规则：<ol><li><strong>快速（Fast）</strong>：测试应该够快。</li><li><strong>独立（Independent）</strong>：测试应该相互独立。</li><li><strong>可重复（Repeatable）</strong>：测试应当可在任何环境中重复通过。</li><li><strong>自足验证（Self-Validating）</strong>：测试应该有布尔值输出。</li><li><strong>及时（Timely）</strong>：测试应及时编写。</li></ol></li></ol><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><ol><li>类的第一条规则是类应该短小。第二条规则是还要更短小。</li><li>单一权责原则（SRP）认为，类或模块应有且只有一条加以修改的理由。</li><li>系统应该由许多短小的类而不是少量巨大的类组成。每个小类封装一个权责，只有一个修改的原因，并与少数其他类一起协同达成期望的系统行为。</li><li>通常而言，方法操作的变量越多，就越黏聚到类上。如果一个类中的每个变量都被每个方法所使用，则该类具有最大的内聚性。</li><li>开放-闭合原则（OCP）：类应当对扩展开放，对修改封闭。</li><li>依赖倒置原则（DIP）：类应当依赖于抽象而不是依赖于具体细节。</li></ol><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><ol><li>软件系统应将启始过程和启始过程之后的运行时逻辑分离开，在启始过程中构建应用对象，也会存在相互缠结的以来关系。</li><li>可以使用抽象工厂模式让应用自行控制何时创建对象，但构造的细节却隔离于应用程序代码之外。</li><li>依赖注入（Dependency Injection）：对象不应负责实体化对自身的依赖。反之，它应当将这份权移交给其他「有权力」的机制，从而实现控制的反转。</li><li>我们应该只去实现今天的用户故事，然后重构，明天再扩展系统、实现新的用户故事。这就是迭代和增量敏捷的精髓所在。</li><li>面向方面编程（aspect-oriented）:被称为方面的模块构造指明了系统中哪些点的行为会以某种一致的方式被修改，从而支持某种特定的场景。</li></ol><h2 id="迭进"><a href="#迭进" class="headerlink" title="迭进"></a>迭进</h2><ol><li>简单设计规则 1：运行所有测试：遵循有关编写测试并持续运行测试的简单、明确的规则，系统就会更贴近 OO 低耦合度、高内聚度的目标。</li><li>简单设计规则 2：重构：在重构过程中，可以应用有关优秀软件设计的一切知识。提升内聚性，降低耦合度，切分关注面，模块化系统性关注面，缩小函数和类的尺寸，选用更好的名称等。</li><li>不可重复：「小规模复用」可大量降低系统复杂性。</li><li>表达力：做到有表达力的最重要方式却是尝试。</li><li>尽可能少的类和方法。</li></ol><h2 id="并发编程"><a href="#并发编程" class="headerlink" title="并发编程"></a>并发编程</h2><table><thead><tr><th>名词</th><th>基础定义</th></tr></thead><tbody><tr><td>限定资源</td><td>并发环境中有着固定尺寸或数量的资源。例如数据库连接和固定尺寸读/写缓存等</td></tr><tr><td>互斥</td><td>每一时刻仅有一个线程能访问共享数据或共享资源</td></tr><tr><td>线程饥饿</td><td>一个或一组线程互相等待执行结束。</td></tr><tr><td>死锁</td><td>两个或多个线程互相等待执行结束。</td></tr><tr><td>活锁</td><td>执行次序一致的线程，每个都想要起步，但发现其他线程已经「在路上」。</td></tr></tbody></table><ol><li><p>对象是过程的抽象。线程是调度的抽象。</p></li><li><p>并发是一种解耦策略。它帮助我们把做什么（目的）和何时（时机）做分解开。</p></li><li><p>并发软件的中肯说法：</p><ul><li>并发会在性能和编写额外代码上增加一些开销；</li><li>正确的并发是复杂的，即便对于简单的问题也是如此；</li><li>并发缺陷并非总能重现，所以常被看做偶发事件而忽略，未被当做真的缺陷看待；</li><li>并发常常需要对设计策略的根本性修改。</li></ul></li><li><p>生产者-消费者模型：一个或多个生产者线程创建某些工作，并置于缓存或者队列中。一个或者多个消费者线程从队列中获取并完成这些工作。生产者和消费者之间的队列是一种限定资源。</p></li><li><p>读者-作者模型：当存在一个主要为读者线程提供信息源，但只是偶尔被作者线程更新的共享资源，吞吐量就会是个问题。增加吞吐量，会导致线程饥饿和过时信息的积累。协调读者线程不去读取正在更新的信息，而作者线程倾向于长期锁定读者线程。</p></li><li><p>宴席哲学家：许多企业级应用中会存在进程竞争资源的情形，如果没有用心设计，这种竞争会遭遇死锁，活锁，吞吐量和效率低等问题。</p></li></ol><p>本书后几章主要侧重于讲解 Java 代码的一些例子，对其它语言帮助不大，在这里就不做整理了。</p><hr><p>正如我在<a href="../a6c2a51d/">上一篇读书笔记</a>中所说的：每一本中都会充斥着许多作者的自己的观点、看法，而唯有价值观相符合或相接近的人才会觉得本书写得很不错，上一本《黑客与画家》是，这本《代码整洁之道》也是，你可能很难认为变量的命名需要有那么考究，函数的长短有那么重要，心里想着程序能运行就没事，甚至连 WARNING 都忽视掉，这类人想必并不是本书的目标群体。而本书的目标群体在开头已经注明了：你想成为一个更好的程序员。其实我觉得目标群体还可以加上一小撮人：有强迫症的程序员——比如我。</p><p>我曾经看自己四个月前的代码能羞愧得钻进地里，心想着怎么能写出这么烂的<a href="https://gist.github.com/WincerChan/362331456a6e0417c5aa1cf3ff7be2b7/revisions" target="_blank" rel="noopener">代码</a>。这四个月固然有我对该门语言较高层级的数据结构更加熟悉，能更熟练的操作它们，但更多的是编程观念的改变：需要用心来写代码，不要简单敷衍了事，不要认为程序只要能运行就算成功。程序毕竟还是写给人看的，就算不是为了别人，看着意义明确的变量，缩进优美的段落，结构分明的函数，想必自己心里也会很舒畅的。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;相对于任何宏伟愿景，对细节的关注甚至是更为关键的专业性基础。首先，开发者通过小型实践获得可用于大型实践的技能和信用度。其次，宏大建筑中最细小的部分，比如关不紧的门、有点儿没铺平的地板，甚至是凌乱的桌面，都会将整个大局的魅力毁灭殆尽。这就是整洁代码之所系。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="文字阁" scheme="https://dinphy.github.io/categories/%E6%96%87%E5%AD%97%E9%98%81/"/>
    
    
      <category term="笔记" scheme="https://dinphy.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="代码" scheme="https://dinphy.github.io/tags/%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>QQ 音乐外链解析</title>
    <link href="https://dinphy.github.io/posts/72171293/"/>
    <id>https://dinphy.github.io/posts/72171293/</id>
    <published>2018-03-07T04:23:06.000Z</published>
    <updated>2018-03-08T09:39:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>大概在五天前，忽然发现一直在用的网易云解析不能用了，去作者的项目查看才知道原来是网易云更换了新的接口，旧接口的请求现在统一返回 403。于是乎，便萌生了自己写一个接口的想法。<a id="more"></a></p><p>其实网易云的外链获取目前还是有几种可用方案，比如：</p><ol><li><a href="https://m1.jixun.moe/" target="_blank" rel="noopener">云音乐直链生成器</a></li><li>手动替换：<code>https://music.163.com/song/media/outer/url?id=[].mp3</code>，将中括号改为歌曲 id，即为外链</li></ol><p>这两种方法其实大同小异，都会 302 至歌曲的缓存地址，但也存在一个身为强迫症的我无法忍受的缺点——缓存地址的协议是 <code>http</code>（从云音乐官网现在还有大量的 Mixed Content 就可以看出网易对这方面并不上心），而且自己将协议修改成 <code>https</code> 后访问部分歌曲又会有机率出现 403，这可真是逼死我了：于是决定暂时放弃掉网易云，换其他家的顶着。</p><h2 id="QQ-音乐"><a href="#QQ-音乐" class="headerlink" title="QQ 音乐"></a>QQ 音乐</h2><p>考虑了一圈，还是决定选 QQ 音乐。在网上也找到了 QQ 音乐所提供的接口：</p><ul><li>请求地址：<code>https://c.y.qq.com/base/fcgi-bin/fcg_music_express_mobile3.fcg</code></li><li>参数，有三个：<ol><li>songmid：歌曲页 Url 的 <code>https://y.qq.com/n/yqq/song/{}.html</code> 括号部分</li><li>filename：歌曲名 <code>&#39;C00&#39; + songmid + &#39;.m4a&#39;</code></li><li>guid：随机生成的数字串 <code>int(random() * 2147483647) * int(time() * 1000) % 10000000000</code></li></ol></li></ul><p>综上，歌曲的请求地址为：<code>https://c.y.qq.com/base/fcgi-bin/fcg_music_express_mobile3.fcg?format=json&amp;cid=205361747&amp;uin=0&amp;songmid={smid}&amp;filename={filename}&amp;guid={guid}</code></p><p>向这个地址请求后，会得到一个 JSON 格式的数据文件，包含了我们需要的信息：vkey</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">'https://c.y.qq.com/base/fcgi-bin/fcg_music_express_mobile3.fcg?format=json&amp;cid=205361747&amp;uin=0&amp;songmid=&#123;smid&#125;&amp;filename=&#123;filename&#125;&amp;guid=&#123;guid&#125;'</span></span><br><span class="line">&#123;<span class="string">"code"</span>:0,<span class="string">"cid"</span>:205361747,<span class="string">"userip"</span>:<span class="string">"××.××.××.××"</span>,<span class="string">"data"</span>:&#123;<span class="string">"expiration"</span>:80400,<span class="string">"items"</span>:[&#123;<span class="string">"subcode"</span>:104001,<span class="string">"songmid"</span>:<span class="string">"000uhMwj387EBp"</span>,<span class="string">"filename"</span>:<span class="string">"C00000uhMwj387EBp.m4a"</span>,<span class="string">"vkey"</span>:<span class="string">"B6BB8F604606DFDC82FD81CE33BC9C0277365D4B8B1BC8BCC909E408EAC9822315B2B9D021F42B495FA14AADCB598B21BCDB867931B7A953"</span>&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure><p>得到了最重要的 <code>vkey</code> 字段后，就可以解析出歌曲的「真实链接」了：</p><p><code>https://dl.stream.qqmusic.qq.com/{filename}?vkey={vkey}&amp;guid={guid}&amp;uin=0&amp;fromtag=66</code></p><p>你可能注意到返回的信息中还包含了 <code>expiration</code> 字段。是的，<code>vkey</code> 只有在该时间段内才有效，当然这个问题很好解决，可以把该程序部署至服务器，而从服务器发起请求获取链接后 302 至歌曲链接。</p><p>而当我满心欢喜的把这个脚本向服务端部署的时候，却失败了：原因是接口的请求地址只支持国内的（想来是因为 QQ 音乐只拿到了在大陆地区的版权），而我的服务器在美国，这个问题就有些难解决了（我没有国内的服务器）。</p><p>于是我想另辟蹊径。</p><h2 id="纯-JS-解析"><a href="#纯-JS-解析" class="headerlink" title="纯 JS 解析"></a>纯 JS 解析</h2><p>既然服务端无法解析，那就用 JS 在用户端解析。</p><p>但又带来了另一个问题——跨域。</p><p>目前跨域请求比较好的解决方案有两种：CORS 和 JSONP，其中 CORS 需要服务器端设置 <code>Access-Control-Allow-Origin</code>，所以也就只有使用 JSONP 了。</p><blockquote><p>注意：跨域请求失败原因浏览器端阻止显示，并非服务器端无法返回数据</p></blockquote><p>使用 JSONP 时要求服务端返回的是满足 <a href="https://zh.wikipedia.org/wiki/JSONP#%E5%8E%9F%E7%90%86" target="_blank" rel="noopener">JSONP 模式</a>的文件，不能是纯 JSON 文件，举个例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url1 = <span class="string">"https://lab.itswincer.com/jsonp/without-callback.js"</span>;</span><br><span class="line"><span class="keyword">var</span> url2 = <span class="string">"https://lab.itswincer.com/jsonp/with-callback.js"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">`Hi, I am <span class="subst">$&#123;data.name&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">script.setAttribute(<span class="string">'src'</span>, url1);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(script);</span><br><span class="line">script.setAttribute(<span class="string">'src'</span>, url2);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(script);</span><br></pre></td></tr></table></figure><p>其中 <code>without-callback.js</code> 返回的是纯 JS 文件，<code>with-callback.js</code> 返回的是满足模式的 JS 文件。可以运行上面代码看看结果。</p><p>本想直接用现成的 <code>ajax</code>，考虑到并非所有的网站都引入了 jQuery，而为 <code>ajax</code> 就引入一个那么庞大的库又有些没必要。</p><p>于是就自己封装了一个 <code>getJSONP()</code> 接口来搭配 <code>getMusic()</code> 使用。</p><p>项目已开源，具体的代码见<a href="https://github.com/WincerChan/QQMusic-Parse" target="_blank" rel="noopener">这里</a>，有很详细的注释。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>为了使接口更干净，没有使用 callback 函数，而是使用了 ES7 的新特性 async、await。尝试过使用 Babel 等工具转换成兼容更好的 ES5 代码，但是并没有成功，故而浏览器的兼容可能存在问题。</p><p>引入<a href="https://cdn.jsdelivr.net/gh/wincerchan/QQMusic-Parse@0.3/parse.min.js" target="_blank" rel="noopener">这个 JS 文件</a>：</p><p>接口：<code>await getMusic()</code>，如下图：</p><p><img src="https://i.loli.net/2018/03/08/5aa0fa4a9dd89.png" alt="Screenshot_20180308_165406.png"></p><blockquote><p>注意：在调用 getMusic() 的时候一定要加上 await 关键字，否则返回的就是一个 Promise 对象了</p></blockquote><h3 id="配合-Aplayer"><a href="#配合-Aplayer" class="headerlink" title="配合 Aplayer"></a>配合 Aplayer</h3><p>由于使用了 ES7 的新特性：async 和 await，故而 Aplayer 的配置文件也需要稍加改动：需要将原配置信息放至包含 <code>async</code> 关键字的函数内，随后调用这个函数，如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">syncHand</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">new</span> Aplayer(...);</span><br><span class="line">&#125;</span><br><span class="line">syncHand();</span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>越来越认同保罗 · 格雷厄姆那句「黑客就像画家，工作起来是有心理周期的有时候，你有了一个令人兴奋的新项目，你会愿意为它一天工作 16 个小时。等过了这一阵，你又会觉得百无聊赖，对所有事情都提不起兴趣。」话了，简直就是我的写照：这四天大约花费了 30 小时（当然有很大一部分缘由是之前没怎么学过 JavaScript，修改一下别人的代码还行，自己写就有点「捉襟见肘」了），而估计后几天又会陷入「空窗期」了。</p><p>而 JavaScript 又是一门有很多<del>坑爹</del>特性的语言，也让我把初学者的坑基本上都踩完了（还是写 Python 爽）。同时也感觉学习新东西的最好、最快的方法就是实战，换句话说，抱着解决问题的目的去学习所学到的知识远比你抱着单纯学习目的所学的知识要更快、更牢靠。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;大概在五天前，忽然发现一直在用的网易云解析不能用了，去作者的项目查看才知道原来是网易云更换了新的接口，旧接口的请求现在统一返回 403。于是乎，便萌生了自己写一个接口的想法。
    
    </summary>
    
      <category term="实验室" scheme="https://dinphy.github.io/categories/%E5%AE%9E%E9%AA%8C%E5%AE%A4/"/>
    
    
      <category term="音乐解析" scheme="https://dinphy.github.io/tags/%E9%9F%B3%E4%B9%90%E8%A7%A3%E6%9E%90/"/>
    
      <category term="Javascript" scheme="https://dinphy.github.io/tags/Javascript/"/>
    
      <category term="网易云" scheme="https://dinphy.github.io/tags/%E7%BD%91%E6%98%93%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>NexT 主题配置备份（二）</title>
    <link href="https://dinphy.github.io/posts/654861fb/"/>
    <id>https://dinphy.github.io/posts/654861fb/</id>
    <published>2017-06-30T02:55:34.000Z</published>
    <updated>2017-12-24T11:39:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>这篇博客是承接上一篇 <a href="../a40f8cd0/">Next 主题配置备份</a>，按照个人喜好做了一些修改。</p><h3 id="加密文章"><a href="#加密文章" class="headerlink" title="加密文章"></a>加密文章</h3><p>网上针对 Hexo 博客加密文章的办法有两种：</p><h4 id="js-的阻塞机制"><a href="#js-的阻塞机制" class="headerlink" title="js 的阻塞机制"></a>js 的阻塞机制</h4><p>在 <code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code> 中的 \<meta> 标签后添加以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>, <span class="string">''</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">                alert(<span class="string">'密码错误'</span>);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>这里的 <code>page</code> 变量就是文章的首部：需要在首部自行添加 <code>password</code> 字段，再设置一个密码值：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: NexT主题配置备份（二）</span><br><span class="line">type: categories</span><br><span class="line">categories: 笔记</span><br><span class="line">tags:</span><br><span class="line"><span class="code">- NexT</span></span><br><span class="line"><span class="code">- 博客</span></span><br><span class="line">copyright: true</span><br><span class="line">date: 2017/06/20 10:55:34</span><br><span class="line">password: ffffff</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>当然这个并不是真的加密，用查源代码的方式还是能看出博客的内容，不过这已经可以阻挡绝大部分访客了。</p><h4 id="crypto-js-的-AES-加密"><a href="#crypto-js-的-AES-加密" class="headerlink" title="crypto-js 的 AES 加密"></a>crypto-js 的 AES 加密</h4><p>采用的是 <a href="https://github.com/edolphin-ydf/hexo-encrypt" target="_blank" rel="noopener">hexo-encrypt</a> 插件，原理见作者<a href="http://edolphin.site/2016/05/31/encrypt-post/" target="_blank" rel="noopener">博客</a>，这个就属于真正的加密了，不知道密码查看源代码就是一堆无法辨认的字符。</p><h3 id="添加一言"><a href="#添加一言" class="headerlink" title="添加一言"></a>添加一言</h3><p>使用效果见我的博客侧边栏的底部。</p><p>需要修改 <code>themes-&gt;next-&gt;layout-&gt;_macro-&gt;sidebar.swig</code>，在倒数第三行的  后面加上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"cost"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cost-inner"</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"Javascript"</span> <span class="attr">src</span>=<span class="string">"https://rawgit.com/WincerChan/d314ff3a0ddc197134ad56efaeb34da0/raw/f4c3e73cdb08235fb01cd8849457c81d52236a1d/hitokoto.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里的 Js 文件是我自己写的，托管在「<a href="https://gist.github.com/d314ff3a0ddc197134ad56efaeb34da0.git" target="_blank" rel="noopener">Gist</a>」，当然你可以自由修改这其中的每一句。我以后也会添加的越来越多</p><p>然后修改 <code>themes-&gt;next-&gt;source-&gt;css-&gt;_schemes-&gt;Pisces</code>，添加：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.cost</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cost-inner</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">240px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background</span>: white;</span><br><span class="line">  <span class="attribute">box-shadow</span>: $box-shadow;</span><br><span class="line">  <span class="attribute">border-radius</span>: $border-radius;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="压缩博客文章"><a href="#压缩博客文章" class="headerlink" title="压缩博客文章"></a>压缩博客文章</h3><p>这里采用的是 <code>gulp</code> 插件，hexo 根目录新建 <code>gulpfile.js</code> 文件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</span><br><span class="line">    del = <span class="built_in">require</span>(<span class="string">'del'</span>);</span><br><span class="line">    rename = <span class="built_in">require</span>(<span class="string">'gulp-rename'</span>),</span><br><span class="line">    cssmin = <span class="built_in">require</span>(<span class="string">'gulp-minify-css'</span>);</span><br><span class="line">    htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>);</span><br><span class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line">    imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</span><br><span class="line">    runSequence = <span class="built_in">require</span>(<span class="string">'run-sequence'</span>);</span><br><span class="line">    Hexo = <span class="built_in">require</span>(<span class="string">'hexo'</span>);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//清除public</span></span><br><span class="line">gulp.task(<span class="string">'clean'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> del([<span class="string">'public/**/*'</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 利用Hexo API 来生成博客内容， 效果和在命令行运行： hexo g 一样</span></span><br><span class="line"><span class="comment">// generate html with 'hexo generate'</span></span><br><span class="line"><span class="keyword">var</span> hexo = <span class="keyword">new</span> Hexo(process.cwd(), &#123;&#125;);</span><br><span class="line">gulp.task(<span class="string">'generate'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">cb</span>) </span>&#123;</span><br><span class="line">    hexo.init().then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hexo.call(<span class="string">'generate'</span>, &#123;</span><br><span class="line">            watch: <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hexo.exit();</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cb()</span><br><span class="line">    &#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">        hexo.exit(err);</span><br><span class="line">        <span class="keyword">return</span> cb(err);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//JS压缩</span></span><br><span class="line">gulp.task(<span class="string">'uglify'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'././public/js/*.js'</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'././public/js/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//public-fancybox-js压缩</span></span><br><span class="line">gulp.task(<span class="string">'fancybox:js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'././public/fancybox/jquery.fancybox.js'</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'././public/fancybox/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//public-fancybox-css压缩</span></span><br><span class="line">gulp.task(<span class="string">'fancybox:css'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'././public/fancybox/jquery.fancybox.css'</span>)</span><br><span class="line">        .pipe(cssmin())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'././public/fancybox/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//CSS压缩</span></span><br><span class="line">gulp.task(<span class="string">'cssmin'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'././public/css/style.css'</span>)</span><br><span class="line">        .pipe(cssmin())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'././public/css/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的所有html</span></span><br><span class="line">gulp.task(<span class="string">'minify-html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: <span class="literal">true</span>,</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyURLs: <span class="literal">true</span>,</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 同上，压缩图片，这里采用了： 最大化压缩效果。</span></span><br><span class="line">gulp.task(<span class="string">'minify-img-aggressive'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/images/**/*.*'</span>)</span><br><span class="line">        .pipe(imagemin(</span><br><span class="line">        [imagemin.gifsicle(&#123;<span class="string">'optimizationLevel'</span>: <span class="number">3</span>&#125;), </span><br><span class="line">        imagemin.jpegtran(&#123;<span class="string">'progressive'</span>: <span class="literal">true</span>&#125;), </span><br><span class="line">        imagemin.optipng(&#123;<span class="string">'optimizationLevel'</span>: <span class="number">7</span>&#125;), </span><br><span class="line">        imagemin.svgo()],</span><br><span class="line">        &#123;<span class="string">'verbose'</span>: <span class="literal">true</span>&#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public/images'</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用run-sequence并发执行，同时处理html，css，js，img</span></span><br><span class="line">gulp.task(<span class="string">'compress'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">cb</span>) </span>&#123;</span><br><span class="line">    runSequence([<span class="string">'minify-html'</span>, <span class="string">'cssmin'</span>, <span class="string">'uglify'</span>, <span class="string">'fancybox:js'</span>, <span class="string">'fancybox:css'</span>, <span class="string">'minify-img-aggressive'</span>], cb);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 执行顺序： 清除public目录 -&gt; 产生原始博客内容 -&gt; 执行压缩混淆</span></span><br><span class="line">gulp.task(<span class="string">'build'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">cb</span>) </span>&#123;</span><br><span class="line">    runSequence(<span class="string">'clean'</span>, <span class="string">'generate'</span>, <span class="string">'compress'</span>, cb)</span><br><span class="line">&#125;);</span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'build'</span>])</span><br></pre></td></tr></table></figure><p>需要用 npm 安装一些包：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">"del": "^3.0.0",</span><br><span class="line">"gulp": "^3.9.1",</span><br><span class="line">"gulp-clean-css": "^3.4.2",</span><br><span class="line">"gulp-htmlclean": "^2.7.14",</span><br><span class="line">"gulp-htmlmin": "^3.0.0",</span><br><span class="line">"gulp-minify-css": "^1.2.4",</span><br><span class="line">"gulp-rename": "^1.2.2",</span><br><span class="line">"gulp-sourcemaps": "^2.6.0",</span><br><span class="line">"gulp-uglify": "^3.0.0",</span><br><span class="line">"run-sequence": "^1.2.2",</span><br><span class="line">"gulp-imagemin": "^3.3.0",</span><br></pre></td></tr></table></figure><p>在执行 <code>gulp build</code> 时，会自动执行 <code>hexo clean</code>、<code>hexo g</code>，这时直接 <code>hexo d</code> 就行了。</p><p>这是网站优化后的结果：<img src="https://ws1.sinaimg.cn/large/ba22af52gy1fh33l1gzdxj20no08uaaj.jpg" alt=""></p><h3 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h3><p>修改 <code>node_modules/hexo-generator-index/lib/generator</code> 内的代码为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在文章的首部添加 <code>top</code> 值，数值越大越靠前：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: NexT主题配置备份（二）</span><br><span class="line">type: categories</span><br><span class="line">categories: 笔记</span><br><span class="line">tags:</span><br><span class="line">  - NexT</span><br><span class="line">  - 博客</span><br><span class="line">copyright: true</span><br><span class="line">top: 888</span><br><span class="line">date: '2017/06/30 10:55:34'</span><br><span class="line">abbrlink: 654861fb</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="隐藏文章"><a href="#隐藏文章" class="headerlink" title="隐藏文章"></a>隐藏文章</h3><p>可实现在首页和归档隐藏指定文章</p><p>首先在需要隐藏文章的 <code>Front-matter</code> 添加 <code>visible</code> 值，值为 <code>hide</code> 就表示隐藏。</p><h4 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h4><p>修改 <code>next/layout/index.swig</code> 中的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> post <span class="keyword">in</span> page.post %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> post.visible !== <span class="string">'hide'</span> %&#125;</span><br><span class="line">    &#123;&#123; post_template.render(post, <span class="literal">true</span>) &#125;&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>在第 14 行左右，将 <code>for post in page.post</code> 中的内容修改成以上</p><h4 id="归档"><a href="#归档" class="headerlink" title="归档"></a>归档</h4><p>修改 <code>next/layout/index.swig</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> post.visible !== <span class="string">'hide'</span> %&#125;</span><br><span class="line">    &#123;&#123; post_template.render(post, <span class="literal">true</span>) &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在第 42 行左右，将原本的 <code>post_template.render(post)</code> 改成以上。</p><p>不建议在归档中隐藏是因为归档提供的是一个统计的功能，隐藏后统计的文章篇数没变，但却显示不出来，有点别扭，不想要别人看就直接加密就好了。至于 <code>type</code> 和 <code>tags</code>，删除文章的相应字段就行了。</p><h3 id="分享页面"><a href="#分享页面" class="headerlink" title="分享页面"></a>分享页面</h3><p>NexT 主题自带的是 <a href="http://www.jiathis.com/" target="_blank" rel="noopener">JiaThis</a>，可是太丑了，还不支持 <code>https</code>，找了好久终于到了「<a href="http://overtrue.me/share.js/" target="_blank" rel="noopener">Share.js</a>」，简直把 JiaThis 秒成渣：</p><p>新增文件：<code>next/layout/_partials/share/sharejs.swig</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"share-component"</span> data-mobile-sites=<span class="string">"weibo,qq,qzone,tencent"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;!-- share.css --&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/social-share.js/1.0.16/css/share.min.css"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- share.js --&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/social-share.js/1.0.16/js/social-share.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>随后修改 <code>next\layout\post.swig</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-spread"</span>&gt;<span class="comment">//在这一行后面添加：</span></span><br><span class="line">  &#123;% include <span class="string">'_partials/share/sharejs.swig'</span> %&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>效果见下方</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇博客是承接上一篇 &lt;a href=&quot;../a40f8cd0/&quot;&gt;Next 主题配置备份&lt;/a&gt;，按照个人喜好做了一些修改。&lt;/p&gt;
&lt;h3 id=&quot;加密文章&quot;&gt;&lt;a href=&quot;#加密文章&quot; class=&quot;headerlink&quot; title=&quot;加密文章&quot;&gt;&lt;/a&gt;加密文章&lt;/h3&gt;&lt;p&gt;网上针对 Hexo 博客加密文章的办法有两种：&lt;/p&gt;
&lt;h4 id=&quot;js-的阻塞机制&quot;&gt;&lt;a href=&quot;#js-的阻塞机制&quot; class=&quot;headerlink&quot; title=&quot;js 的阻塞机制&quot;&gt;&lt;/a&gt;js 的阻塞机制&lt;/h4&gt;&lt;p&gt;在 &lt;code&gt;themes-&amp;gt;next-&amp;gt;layout-&amp;gt;_partials-&amp;gt;head.swig&lt;/code&gt; 中的 \&lt;meta&gt; 标签后添加以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#123; page.password &amp;#125;&amp;#125;&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (prompt(&lt;span class=&quot;string&quot;&gt;&#39;请输入文章密码&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;) !== &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#123; page.password &amp;#125;&amp;#125;&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                alert(&lt;span class=&quot;string&quot;&gt;&#39;密码错误&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                history.back();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="博客栈" scheme="https://dinphy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%A0%88/"/>
    
    
      <category term="NexT" scheme="https://dinphy.github.io/tags/NexT/"/>
    
      <category term="博客" scheme="https://dinphy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>NexT 主题配置备份</title>
    <link href="https://dinphy.github.io/posts/a40f8cd0/"/>
    <id>https://dinphy.github.io/posts/a40f8cd0/</id>
    <published>2017-05-31T10:04:00.000Z</published>
    <updated>2017-11-24T11:38:38.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h3><p>参照 <a href="http://theme-next.iissnan.com/getting-started.html#theme-settings" target="_blank" rel="noopener">NexT 使用文档</a>，设置中文语言、头像、作者、网站描述和 URL 等。</p><h3 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h3><p>修改 <code>themes/next/layout/_layout.swig</code>:</p><p>加上下面内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"js/src/particle.js&gt;&lt;script&gt;</span></span><br><span class="line"><span class="string">&lt;script type="</span>text/javascript<span class="string">" src="</span>/js/src/particle.js<span class="string">" count="</span><span class="number">50</span><span class="string">" zindex="</span><span class="number">-2</span><span class="string">" opacity="</span><span class="number">1</span><span class="string">" color="</span><span class="number">0</span>,<span class="number">104</span>,<span class="number">183</span><span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>目前的 NexT 主题已经自带 canvas_nest 等四个特效，可以在主题配置文件搜索并将对应的值改为 <code>true</code>，这里不用自带是因为想添加彩色的线条，自带的只有黑色。</p><a id="more"></a><p>然后在 <code>thmems/next/source/js/src/</code> 目录新建 <code>particle.js</code>，文件写入以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">! <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params">n, e, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> n.getAttribute(e) || t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementsByTagName(n)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t = e(<span class="string">"script"</span>),</span><br><span class="line">            o = t.length,</span><br><span class="line">            i = t[o - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            l: o,</span><br><span class="line">            z: n(i, <span class="string">"zIndex"</span>, <span class="number">-1</span>),</span><br><span class="line">            o: n(i, <span class="string">"opacity"</span>, <span class="number">.5</span>),</span><br><span class="line">            c: n(i, <span class="string">"color"</span>, <span class="string">"0,0,0"</span>),</span><br><span class="line">            n: n(i, <span class="string">"count"</span>, <span class="number">99</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        c = u.width = <span class="built_in">window</span>.innerWidth || <span class="built_in">document</span>.documentElement.clientWidth || <span class="built_in">document</span>.body.clientWidth, a = u.height = <span class="built_in">window</span>.innerHeight || <span class="built_in">document</span>.documentElement.clientHeight || <span class="built_in">document</span>.body.clientHeight</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        l.clearRect(<span class="number">0</span>, <span class="number">0</span>, c, a);</span><br><span class="line">        <span class="keyword">var</span> n, e, t, o, u, d, x = [w].concat(y);</span><br><span class="line">        y.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (i.x += i.xa, i.y += i.ya, i.xa *= i.x &gt; c || i.x &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>, i.ya *= i.y &gt; a || i.y &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>, l.fillRect(i.x - <span class="number">.5</span>, i.y - <span class="number">.5</span>, <span class="number">1</span>, <span class="number">1</span>), e = <span class="number">0</span>; e &lt; x.length; e++) n = x[e], i !== n &amp;&amp; <span class="literal">null</span> !== n.x &amp;&amp; <span class="literal">null</span> !== n.y &amp;&amp; (o = i.x - n.x, u = i.y - n.y, d = o * o + u * u, d &lt; n.max &amp;&amp; (n === w &amp;&amp; d &gt;= n.max / <span class="number">2</span> &amp;&amp; (i.x -= <span class="number">.03</span> * o, i.y -= <span class="number">.03</span> * u), t = (n.max - d) / n.max, l.beginPath(), l.lineWidth = t / <span class="number">2</span>, l.strokeStyle = <span class="string">"rgba("</span> + m.c + <span class="string">","</span> + (t + <span class="number">.2</span>) + <span class="string">")"</span>, l.moveTo(i.x, i.y), l.lineTo(n.x, n.y), l.stroke()));</span><br><span class="line">            x.splice(x.indexOf(i), <span class="number">1</span>)</span><br><span class="line">        &#125;), r(i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> c, a, u = <span class="built_in">document</span>.createElement(<span class="string">"canvas"</span>),</span><br><span class="line">        m = t(),</span><br><span class="line">        d = <span class="string">"c_n"</span> + m.l,</span><br><span class="line">        l = u.getContext(<span class="string">"2d"</span>),</span><br><span class="line">        r = <span class="built_in">window</span>.requestAnimationFrame || <span class="built_in">window</span>.webkitRequestAnimationFrame || <span class="built_in">window</span>.mozRequestAnimationFrame || <span class="built_in">window</span>.oRequestAnimationFrame || <span class="built_in">window</span>.msRequestAnimationFrame || <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">window</span>.setTimeout(n, <span class="number">1e3</span> / <span class="number">45</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        x = <span class="built_in">Math</span>.random,</span><br><span class="line">        w = &#123;</span><br><span class="line">            x: <span class="literal">null</span>,</span><br><span class="line">            y: <span class="literal">null</span>,</span><br><span class="line">            max: <span class="number">2e4</span></span><br><span class="line">        &#125;;</span><br><span class="line">    u.id = d, u.style.cssText = <span class="string">"position:fixed;top:0;left:0;z-index:"</span> + m.z + <span class="string">";opacity:"</span> + m.o, e(<span class="string">"body"</span>)[<span class="number">0</span>].appendChild(u), o(), <span class="built_in">window</span>.onresize = o, <span class="built_in">window</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">        n = n || <span class="built_in">window</span>.event, w.x = n.clientX, w.y = n.clientY</span><br><span class="line">    &#125;, <span class="built_in">window</span>.onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        w.x = <span class="literal">null</span>, w.y = <span class="literal">null</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> y = [], s = <span class="number">0</span>; m.n &gt; s; s++) &#123;</span><br><span class="line">        <span class="keyword">var</span> f = x() * c,</span><br><span class="line">            h = x() * a,</span><br><span class="line">            g = <span class="number">2</span> * x() - <span class="number">1</span>,</span><br><span class="line">            p = <span class="number">2</span> * x() - <span class="number">1</span>;</span><br><span class="line">        y.push(&#123;</span><br><span class="line">            x: f,</span><br><span class="line">            y: h,</span><br><span class="line">            xa: g,</span><br><span class="line">            ya: p,</span><br><span class="line">            max: <span class="number">6e3</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        i()</span><br><span class="line">    &#125;, <span class="number">100</span>)</span><br><span class="line">&#125;();</span><br></pre></td></tr></table></figure><h3 id="鼠标点击小红心"><a href="#鼠标点击小红心" class="headerlink" title="鼠标点击小红心"></a>鼠标点击小红心</h3><p>修改 <code>themes/next/layout/_layout.swig</code>:</p><p>加上下面内容：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/love.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>然后在 <code>themes/next/source/js/src/</code> 目录新建文件 <code>love.js</code>，添加以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">! <span class="function"><span class="keyword">function</span>(<span class="params">e, t, a</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>), o(), r()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; d.length; e++) d[e].alpha &lt;= <span class="number">0</span> ? (t.body.removeChild(d[e].el), d.splice(e, <span class="number">1</span>)) : (d[e].y--, d[e].scale += <span class="number">.004</span>, d[e].alpha -= <span class="number">.013</span>, d[e].el.style.cssText = <span class="string">"left:"</span> + d[e].x + <span class="string">"px;top:"</span> + d[e].y + <span class="string">"px;opacity:"</span> + d[e].alpha + <span class="string">";transform:scale("</span> + d[e].scale + <span class="string">","</span> + d[e].scale + <span class="string">") rotate(45deg);background:"</span> + d[e].color + <span class="string">";z-index:99999"</span>);</span><br><span class="line">        requestAnimationFrame(r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t = <span class="string">"function"</span> == <span class="keyword">typeof</span> e.onclick &amp;&amp; e.onclick;</span><br><span class="line">        e.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            t &amp;&amp; t(), i(e)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = t.createElement(<span class="string">"div"</span>);</span><br><span class="line">        a.className = <span class="string">"heart"</span>, d.push(&#123;</span><br><span class="line">            el: a,</span><br><span class="line">            x: e.clientX - <span class="number">5</span>,</span><br><span class="line">            y: e.clientY - <span class="number">5</span>,</span><br><span class="line">            scale: <span class="number">1</span>,</span><br><span class="line">            alpha: <span class="number">1</span>,</span><br><span class="line">            color: s()</span><br><span class="line">        &#125;), t.body.appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = t.createElement(<span class="string">"style"</span>);</span><br><span class="line">        a.type = <span class="string">"text/css"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            a.appendChild(t.createTextNode(e))</span><br><span class="line">        &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">            a.styleSheet.cssText = e</span><br><span class="line">        &#125;</span><br><span class="line">        t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"rgb("</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">")"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> d = [];</span><br><span class="line">    e.requestAnimationFrame = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            setTimeout(e, <span class="number">1e3</span> / <span class="number">60</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;(), n()</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><h3 id="文章的标签"><a href="#文章的标签" class="headerlink" title="文章的标签"></a>文章的标签</h3><p>文章的 tags 是用「#」来标注，将「#」换成图标：</p><p>修改 <code>layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><h3 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h3><p>修改 <code>hexo-generator-index</code> 插件：</p><p>修改文件：<code>node_modules/hexo-generator-index/lib/generator.js</code> 为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在文章的 <code>Front-matter</code> 中添加 <code>top</code> 值，数值越大文章越靠前，如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Next主题配置备份</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">笔记</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Next</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">top:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="bullet">-05</span><span class="bullet">-31</span> <span class="number">18</span><span class="string">:04:00</span></span><br></pre></td></tr></table></figure><h3 id="NexT-主题自定义无序列表样式"><a href="#NexT-主题自定义无序列表样式" class="headerlink" title="NexT 主题自定义无序列表样式"></a>NexT 主题自定义无序列表样式</h3><p>打开 <code>\themes\next\source\css\_custom\custom.styl</code> 加入：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">list-style-type: circle;  // 空心圆，实心圆为 disc</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改侧边栏头像为圆形"><a href="#修改侧边栏头像为圆形" class="headerlink" title="修改侧边栏头像为圆形"></a>修改侧边栏头像为圆形</h3><p>修改文件 <code>themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>，修改其中的 <code>.site-author-image</code> 段代码，改为如下形式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">96px</span>;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>鼠标悬停旋转效果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">96px</span>;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span></span><br><span class="line">  webkit-transition: <span class="number">1.4s</span> all;</span><br><span class="line">  <span class="attribute">moz-transition</span>: <span class="number">1.4s</span> all;</span><br><span class="line">  <span class="attribute">ms-transition</span>: <span class="number">1.4s</span> all;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">1.4s</span> all;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-author-image</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#55DAE1</span>;</span><br><span class="line">  <span class="attribute">webkit-transform</span>: <span class="built_in">rotate</span>(360deg) <span class="built_in">scale</span>(1.1);</span><br><span class="line">  <span class="attribute">moz-transform</span>: <span class="built_in">rotate</span>(360deg) <span class="built_in">scale</span>(1.1);</span><br><span class="line">  <span class="attribute">ms-transform</span>: <span class="built_in">rotate</span>(360deg) <span class="built_in">scale</span>(1.1);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(360deg) <span class="built_in">scale</span>(1.1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考链接：</p><ul><li><a href="http://codepub.cn/2016/03/20/Hexo-blog-theme-switching-from-Jacman-to-NexT-Mist/" target="_blank" rel="noopener">http://codepub.cn/2016/03/20/Hexo-blog-theme-switching-from-Jacman-to-NexT-Mist/</a></li></ul><h3 id="文章链接唯一化"><a href="#文章链接唯一化" class="headerlink" title="文章链接唯一化"></a>文章链接唯一化</h3><p>也许你会数次更改文章题目或者变更文章发布时间，在默认设置下，文章链接都会改变，不利于搜索引擎收录，也不利于分享。唯一永久链接才是更好的选择。安装此插件后，不要在 <code>hexo s</code> 模式下更改文章文件名，否则文章将成空白。</p><p>安装：<code>npm install hexo-abbrlink --save</code></p><p>在站点配置文件中查找代码 <code>permalink</code>，将其更改为：<code>permalink: posts/:abbrlink/  # “posts/” 可自行更换</code></p><p>同样在站点配置文件中添加代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line"><span class="attr">  alg:</span> <span class="string">crc32</span>  <span class="comment"># 算法：crc16(default) and crc32 </span></span><br><span class="line"><span class="attr">  rep:</span> <span class="string">hex</span>    <span class="comment"># 进制：dec(default) and hex</span></span><br></pre></td></tr></table></figure><p>可选模式：</p><ul><li>crc16 &amp; hex</li><li>crc16 &amp; dec</li><li>crc32 &amp; hex</li><li>crc32 &amp; dec</li></ul><h3 id="文章底部增加版权信息"><a href="#文章底部增加版权信息" class="headerlink" title="文章底部增加版权信息"></a>文章底部增加版权信息</h3><p>自定义版权信息，不采用 NexT 本身的版权设置</p><p>添加 <code>next/layout/_macro/my-copyright.swig</code> 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;my_post_copyright&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;!-- JS库 sweetalert 可修改路径 --&gt;</span><br><span class="line">  &lt;script src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css&quot;&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &lt;span class=&quot;copy-path&quot;  title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot;  aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt;  </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">    var clipboard = new Clipboard(&apos;.fa-clipboard&apos;);</span><br><span class="line">clipboard.on(&apos;success&apos;, $(function()&#123;</span><br><span class="line">  $(&quot;.fa-clipboard&quot;).click(function()&#123;</span><br><span class="line">swal(&#123;   </span><br><span class="line">  title: &quot;&quot;,   </span><br><span class="line">  text: &apos;复制成功&apos;,   </span><br><span class="line">  html: false,</span><br><span class="line">  timer: 500,   </span><br><span class="line">  showConfirmButton: false</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">    &#125;));  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在目录 <code>next/source/css/_common/components/post/</code> 下添加 <code>my-post-copyright.styl</code>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">45em</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">2.8em</span> auto <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d3d3d3</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.93rem</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</span><br><span class="line">  <span class="attribute">word-break</span>: break-all;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">p</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5.2em</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#b5b5b5</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.raw</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a3d2a3</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.fa-clipboard</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.post-url</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 <code>next/layout/_macro/post.swig</code>，在代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">        &#123;% include <span class="string">'wechat-subscriber.swig'</span> %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p>之前添加增加如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">        &#123;% include <span class="string">'my-copyright.swig'</span> %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p>修改 <code>next/source/css/_common/components/post/post.styl</code> 文件，在最后一行增加代码：<code>@import &quot;my-post-copyright&quot;</code></p><p>每当发布一篇文章，需要在 <code>Front-matter</code> 添加 <code>copyright: true</code></p><p>参考链接：<a href="http://www.wuxubj.cn/" target="_blank" rel="noopener">务虚笔记</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;基本设置&quot;&gt;&lt;a href=&quot;#基本设置&quot; class=&quot;headerlink&quot; title=&quot;基本设置&quot;&gt;&lt;/a&gt;基本设置&lt;/h3&gt;&lt;p&gt;参照 &lt;a href=&quot;http://theme-next.iissnan.com/getting-started.html#theme-settings&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NexT 使用文档&lt;/a&gt;，设置中文语言、头像、作者、网站描述和 URL 等。&lt;/p&gt;
&lt;h3 id=&quot;动态背景&quot;&gt;&lt;a href=&quot;#动态背景&quot; class=&quot;headerlink&quot; title=&quot;动态背景&quot;&gt;&lt;/a&gt;动态背景&lt;/h3&gt;&lt;p&gt;修改 &lt;code&gt;themes/next/layout/_layout.swig&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;加上下面内容：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script type=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; src=&lt;span class=&quot;string&quot;&gt;&quot;js/src/particle.js&amp;gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;lt;script type=&quot;&lt;/span&gt;text/javascript&lt;span class=&quot;string&quot;&gt;&quot; src=&quot;&lt;/span&gt;/js/src/particle.js&lt;span class=&quot;string&quot;&gt;&quot; count=&quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot; zindex=&quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot; opacity=&quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot; color=&quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;104&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;183&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;目前的 NexT 主题已经自带 canvas_nest 等四个特效，可以在主题配置文件搜索并将对应的值改为 &lt;code&gt;true&lt;/code&gt;，这里不用自带是因为想添加彩色的线条，自带的只有黑色。&lt;/p&gt;
    
    </summary>
    
      <category term="博客栈" scheme="https://dinphy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%A0%88/"/>
    
    
      <category term="NexT" scheme="https://dinphy.github.io/tags/NexT/"/>
    
      <category term="博客" scheme="https://dinphy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 入门参考</title>
    <link href="https://dinphy.github.io/posts/3e793072/"/>
    <id>https://dinphy.github.io/posts/3e793072/</id>
    <published>2017-05-25T13:00:38.000Z</published>
    <updated>2017-12-24T11:38:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>以下分别代表一至五级标题：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#h1</span></span><br><span class="line"><span class="section">##h2</span></span><br><span class="line"><span class="section">###h3</span></span><br><span class="line"><span class="section">####h4</span></span><br><span class="line"><span class="section">#####h5</span></span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>在段落等内容前使用 <code>&gt;</code> 符号，可以将这段内容标记为<strong>引用</strong>的内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用内容</span><br><span class="line">&gt;&gt;二级引用</span><br></pre></td></tr></table></figure><a id="more"></a><blockquote><p>引用内容</p><blockquote><p>二级引用</p></blockquote></blockquote><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>可以作为标记</span><br><span class="line"><span class="bullet">+ </span>也可以</span><br><span class="line"><span class="bullet">- </span>同样可以</span><br></pre></td></tr></table></figure><ul><li>可以作为标记</li></ul><ul><li>也可以</li></ul><ul><li>同样可以</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>以数字和<span class="code">`. `</span>开始；</span><br><span class="line"><span class="bullet">3. </span>数字的顺序并不会影响生成的列表序列；</span><br></pre></td></tr></table></figure><ol><li>以数字和 <code>.</code> 开始；</li><li>数字的顺序并不会影响生成的列表序列；</li></ol><h4 id="嵌套的列表"><a href="#嵌套的列表" class="headerlink" title="嵌套的列表"></a>嵌套的列表</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>第一层</span><br><span class="line"><span class="code">+ 1-1</span></span><br><span class="line"><span class="code">+ 1-2</span></span><br><span class="line"><span class="bullet">2. </span>无序列表和有序列表可以随意嵌套</span><br><span class="line"><span class="code">1. 2-1</span></span><br><span class="line"><span class="code">    2. 2-2</span></span><br></pre></td></tr></table></figure><ol><li>第一层<ul><li>1-1</li><li>1-2</li></ul></li><li>无序列表和有序列表可以随意嵌套<ol><li>2-1</li><li>2-2</li></ol></li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><p>在代码的头部和尾部用 ``` 包围起来，需要高亮的话，在 ``` 包围的代码块头部标注语法的名字：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'Python syntax highlighting'</span></span><br><span class="line"><span class="keyword">for</span> chr <span class="keyword">in</span> s:</span><br><span class="line">    <span class="keyword">print</span> (s)</span><br></pre></td></tr></table></figure><h4 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h4><p>通过 <code></code> 插入行内代码：</p><p><code>print(Hello world)</code></p><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>一行中使用三个即以上的 <code>*</code>、<code>-</code>、<code>_</code>来添加分隔线：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">***</span>*</span><br></pre></td></tr></table></figure><hr><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>需要显示的文本为 [] 的内容，小括号中的链接可以是本地也可以是网络</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">Google</span>](<span class="link">https://google.com</span>)</span><br></pre></td></tr></table></figure><p><a href="https://google.com" target="_blank" rel="noopener">Google</a></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>语法与超链接基本一致，只是需要在前面加一个 !：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">title</span>](<span class="link">https://cdn.pixabay.com/photo/2012/10/26/00/45/senegal-pechlibelle-62964_960_720.jpg</span>)</span><br></pre></td></tr></table></figure><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><h4 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h4><p>使用 <code>** **</code> 或 <code>__ __</code> 包括的文本会转化成<strong>粗体</strong></p><h4 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h4><p>使用 <code>* *</code> 或 <code>_ _</code> 包括的文本会转化为_斜体_</p><h3 id="字符的转义"><a href="#字符的转义" class="headerlink" title="字符的转义"></a>字符的转义</h3><p>当需要显示一些特殊的字符的时候，需要使用反斜线 <code>\</code> 来进行转义：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这是一个<span class="emphasis">*转义*</span>的<span class="emphasis">_例子_</span></span><br><span class="line">这是一个\<span class="emphasis">*转义\*</span>的\<span class="emphasis">_例子\_</span></span><br></pre></td></tr></table></figure><p>这是一个<em>转义</em>的_例子_</p><p>这是一个*转义*的_例子_</p><h2 id="进阶语法"><a href="#进阶语法" class="headerlink" title="进阶语法"></a>进阶语法</h2><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是~~删除线~~</span><br></pre></td></tr></table></figure><p>这是<del>删除线</del></p><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>Markdown 原生并无下划线语法，可以通过 HTML 来实现：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>这是下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br></pre></td></tr></table></figure><p><u>这是下划线</u></p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><h4 id="单元格和表头"><a href="#单元格和表头" class="headerlink" title="单元格和表头"></a>单元格和表头</h4><p>使用 <code>|</code> 来分隔不同单元格，使用 <code>-</code>  来分隔表头和其他行：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| name  | age  |</span><br><span class="line">| ----- | ---- |</span><br><span class="line">| Leo   | 16   |</span><br><span class="line">| Virgo | 18   |</span><br></pre></td></tr></table></figure><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>Leo</td><td>16</td></tr><tr><td>Virgo</td><td>18</td></tr></tbody></table><h4 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h4><p>在表头下方的分隔线标记加入 <code>:</code>，可更换下方单元格的对齐方式：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| left | center | right |</span><br><span class="line">| ---- | :----: | ----: |</span><br><span class="line">| left | center | right |</span><br></pre></td></tr></table></figure><table><thead><tr><th>left</th><th style="text-align:center">center</th><th style="text-align:right">right</th></tr></thead><tbody><tr><td>left</td><td style="text-align:center">center</td><td style="text-align:right">right</td></tr></tbody></table><h3 id="待办事宜（hexo-不支持以下语法）"><a href="#待办事宜（hexo-不支持以下语法）" class="headerlink" title="待办事宜（hexo 不支持以下语法）"></a>待办事宜（hexo 不支持以下语法）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>[ ] 吃饭</span><br><span class="line"><span class="bullet">- </span>[x] 唱歌</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/ba22af52gy1ffy07lxnyhj20fn02ct8i.jpg" alt=""></p><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p>以 flow 为关键字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">e=&gt;end: End</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/ba22af52gy1ffy055sa4mj20710bgt8p.jpg" alt=""></p><h3 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h3><p>以 sequence 为关键字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/ba22af52gy1ffy05m64ttj20e607i3yk.jpg" alt=""></p><h3 id="Latex-公式"><a href="#Latex-公式" class="headerlink" title="Latex 公式"></a>Latex 公式</h3><h4 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h4><p>用 <code>$ $</code> 包括起来的表示行内公式：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">质能守恒方程：$E=mc^2$</span><br></pre></td></tr></table></figure><p>质能守恒方程：$E=mc^2$</p><h4 id="整行公式"><a href="#整行公式" class="headerlink" title="整行公式"></a>整行公式</h4><p>用 <code>$$ $$</code> 包括起来的表示整行公式：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$$\sum<span class="emphasis">_&#123;i=1&#125;^n a_</span>i=0$$</span><br><span class="line">$$f(x<span class="emphasis">_1,x_</span>x,\ldots,x<span class="emphasis">_n)=x_</span>1^2+x<span class="emphasis">_2^2+\cdots+x_</span>n^2$$</span><br></pre></td></tr></table></figure><p>$$\sum_{i=1}^n a_i=0$$</p><p>$$f(x_1,x_x,\ldots,x_n)=x_1^2+x_2^2+\cdots+x_n^2$$</p><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>使用 <code>[^keyword]</code> 表示脚注：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是一个脚注[^1]的例子</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^1</span>]: <span class="link">这是一个脚注</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本语法&quot;&gt;&lt;a href=&quot;#基本语法&quot; class=&quot;headerlink&quot; title=&quot;基本语法&quot;&gt;&lt;/a&gt;基本语法&lt;/h2&gt;&lt;h3 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h3&gt;&lt;p&gt;以下分别代表一至五级标题：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;#h1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;##h2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;###h3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;####h4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;#####h5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h3&gt;&lt;p&gt;在段落等内容前使用 &lt;code&gt;&amp;gt;&lt;/code&gt; 符号，可以将这段内容标记为&lt;strong&gt;引用&lt;/strong&gt;的内容：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;引用内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;二级引用&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="分享境" scheme="https://dinphy.github.io/categories/%E5%88%86%E4%BA%AB%E5%A2%83/"/>
    
    
      <category term="Markdown" scheme="https://dinphy.github.io/tags/Markdown/"/>
    
      <category term="语法" scheme="https://dinphy.github.io/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
</feed>
